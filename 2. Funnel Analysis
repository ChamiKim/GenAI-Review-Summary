-- INCS_NO 빈 값 채우기
WITH NEW_INCS_GA AS (
    SELECT  *
          , COALESCE(INCS_NO, MAX(INCS_NO) OVER (PARTITION BY SESS_ID, GOOGLE_CID)) AS NEW_INCS_NO
    FROM CDP.SF_CDPDW.F_LOG_GA_HIST
WHERE SITE_ID IN ('UA-110770460-3', 'UA-110770460-1')
      AND STND_YMD BETWEEN '2024-02-01' AND '2024-03-31'
)
-- 조회할 로그 정보
, LOGS AS (
    SELECT LOG_DTTM, WEB_APP_CL_CD, GOOGLE_CID, SESS_ID, INCS_NO, EMP_YN, AGE, SEX_CD, CUST_GRD_NM, PG_NM, PG_TP_VL, ACCM_STAY_TIME_NSS, PG_STAY_TIME, SESS_SN_STAY_TIME
           , SESS_SN, EVNT_NM, EVNT_ACTN, EVNT_LABEL, NEW_INCS_NO, ROW_NUMBER() OVER (PARTITION BY SESS_ID ORDER BY LOG_DTTM ASC) AS LOG_ORDER
           , SUM(SESS_SN_STAY_TIME) OVER (PARTITION BY SESS_ID, NEW_INCS_NO) AS SESS_STAY_TIME
    FROM NEW_INCS_GA
    WHERE EVNT_NM IN ('Scroll', 'product', 'checkout1', 'checkout2', 'checkot3', 'checkout4', 'addToCart', 'purchase')
    ORDER BY LOG_DTTM, SESS_ID, NEW_INCS_NO, LOG_ORDER
)
-- 분석에 사용할 퍼널 정보
SELECT *
FROM LOGS;

-- 상품 페이지 체류 시간이 긴 사용자들의 구매 전환 여부 분석
WITH product_time AS (
    -- (1) 상품 페이지 체류 시간 계산
    SELECT 
        SESS_ID,
        AVG(PG_STAY_TIME) / 1000 AS avg_product_stay_time_sec  -- 밀리초 → 초 변환
    FROM LOGS
    WHERE EVNT_NM = 'product'
    GROUP BY SESS_ID
),

purchase_status AS (
    -- (2) 구매 여부 확인 (상품을 본 사용자 중 구매한 사람 찾기)
    SELECT DISTINCT SESS_ID,
        CASE 
            WHEN EXISTS (
                SELECT 1 FROM LOGS l2
                WHERE l2.SESS_ID = p.SESS_ID AND l2.EVNT_NM = 'purchase'
            ) THEN '구매 전환'
            ELSE '구매 미전환'
        END AS purchase_status
    FROM product_time p
)

-- (3) 최종 집계: 체류 시간 & 구매 여부 그룹화
SELECT 
    ps.purchase_status,
    COUNT(*) AS user_count,
    ROUND(AVG(pt.avg_product_stay_time_sec), 2) AS avg_product_stay_time
FROM purchase_status ps
JOIN product_time pt ON ps.SESS_ID = pt.SESS_ID
GROUP BY ps.purchase_status;


-- 상품 페이지에서 전환 없이 이탈한 비율 (product_exit_pct) 분석
WITH product_users AS (
    -- (1) 상품 페이지를 본 사용자 리스트 (고객 등급 포함)
    SELECT DISTINCT SESS_ID, CUST_GRD_NM
    FROM LOGS
    WHERE EVNT_NM = 'product'
),

conversion_status AS (
    -- (2) 상품을 본 사용자가 장바구니 또는 구매로 전환했는지 확인
    SELECT 
        pu.SESS_ID,
        pu.CUST_GRD_NM,
        CASE 
            WHEN EXISTS (
                SELECT 1 FROM LOGS l
                WHERE l.SESS_ID = pu.SESS_ID AND l.EVNT_NM IN ('addToCart', 'purchase')
            ) THEN '전환'
            ELSE '이탈'
        END AS conversion_status
    FROM product_users pu
)

-- (3) 고객 등급별 이탈 비율 계산
SELECT 
    CUST_GRD_NM,
    COUNT(*) AS total_product_viewers,
    SUM(CASE WHEN conversion_status = '전환' THEN 1 ELSE 0 END) AS converted_users,
    SUM(CASE WHEN conversion_status = '이탈' THEN 1 ELSE 0 END) AS product_exit_users,
    ROUND(100 * SUM(CASE WHEN conversion_status = '이탈' THEN 1 ELSE 0 END) 
        / NULLIF(COUNT(*), 0), 2) AS product_exit_pct  -- 고객 등급별 이탈률 계산
FROM conversion_status
GROUP BY CUST_GRD_NM
ORDER BY product_exit_pct DESC;  -- 이탈률 높은 순으로 정렬




-- ✅ 고객 등급별 퍼널 분석 (EVNT_ACTN 기반): 전환율, 이탈율, 체류시간

WITH BASE_LOGS AS (
    SELECT 
        SESS_ID,
        NEW_INCS_NO,
        CUST_GRD_NM,
        EVNT_ACTN,
        LEAD(PG_STAY_TIME, 1) OVER (PARTITION BY SESS_ID ORDER BY LOG_DTTM) / 1000 AS PG_STAY_SEC  -- 다음 행에서 시간 당겨오기
    FROM CDP.SF_CDPDW.F_LOG_GA_HIST
    WHERE EVNT_ACTN IN ('product', 'Scroll', 'checkout1', 'checkout2', 'checkout3', 'checkout4', 'purchase')
      AND STND_YMD BETWEEN '2024-02-01' AND '2024-03-31'
),

FUNNEL_FLAGGED AS (
    SELECT 
        SESS_ID,
        NEW_INCS_NO,
        CUST_GRD_NM,
        MAX(CASE WHEN EVNT_ACTN = 'product' THEN 1 ELSE 0 END) AS has_product,
        MAX(CASE WHEN EVNT_ACTN = 'Scroll' THEN 1 ELSE 0 END) AS has_scroll,
        MAX(CASE WHEN EVNT_ACTN = 'checkout1' THEN 1 ELSE 0 END) AS has_checkout1,
        MAX(CASE WHEN EVNT_ACTN = 'checkout2' THEN 1 ELSE 0 END) AS has_checkout2,
        MAX(CASE WHEN EVNT_ACTN = 'checkout3' THEN 1 ELSE 0 END) AS has_checkout3,
        MAX(CASE WHEN EVNT_ACTN = 'checkout4' THEN 1 ELSE 0 END) AS has_checkout4,
        MAX(CASE WHEN EVNT_ACTN = 'purchase' THEN 1 ELSE 0 END) AS has_purchase,
        SUM(CASE WHEN EVNT_ACTN = 'product' THEN PG_STAY_SEC ELSE 0 END) AS product_stay_sec
    FROM BASE_LOGS
    GROUP BY SESS_ID, NEW_INCS_NO, CUST_GRD_NM
)

SELECT
    CUST_GRD_NM,
    COUNT(*) AS total_sessions,
    COUNT_IF(has_product = 1) AS product_views,
    COUNT_IF(has_product = 1 AND has_checkout1 = 1) AS product_to_checkout1,
    COUNT_IF(has_product = 1 AND has_checkout2 = 1) AS product_to_checkout2,
    COUNT_IF(has_product = 1 AND has_checkout3 = 1) AS product_to_checkout3,
    COUNT_IF(has_product = 1 AND has_checkout4 = 1) AS product_to_checkout4,
    COUNT_IF(has_product = 1 AND has_purchase = 1) AS product_to_purchase,
    COUNT_IF(has_product = 1 AND has_checkout1 = 0 AND has_purchase = 0) AS product_exit_only,
    ROUND(AVG(CASE WHEN has_product = 1 THEN product_stay_sec END), 2) AS avg_product_stay_sec
FROM FUNNEL_FLAGGED
GROUP BY CUST_GRD_NM
ORDER BY total_sessions DESC;

